---------------------------------------------------------------------------
Aliases
---------------------------------------------------------------------------
SQL aliases are used to give a table, or a column in a table, a temporary name.
---------------------------------------------------------------------------
Aliases are often used to make column names more readable.
---------------------------------------------------------------------------
Aliases can be useful when:
---------------------------------------------------------------------------
	There are more than one table involved in a query
---------------------------------------------------------------------------
	Functions are used in the query
---------------------------------------------------------------------------
	Column names are big or not very readable
---------------------------------------------------------------------------
	Two or more columns are combined together
---------------------------------------------------------------------------
An alias only exists for the duration of the query.
---------------------------------------------------------------------------
Alias Column Syntax
---------------------------------------------------------------------------
SELECT column_name AS alias_name
FROM table_name;
----------------------------------------------------------------------------------------------------
Alias Table Syntax
---------------------------------------------------------------------------
SELECT column_name(s)
FROM table_name AS alias_name;
---------------------------------------------------------------------------
SQL statement creates two aliases, one for the CustomerID column and one for the CustomerName column:
---------------------------------------------------------------------------
1.	SELECT CustomerID as ID, CustomerName AS Customer
	FROM Customers;
---------------------------------------------------------------------------
SQL statement creates two aliases, one for the CustomerName column and one for the ContactName column. 
---------------------------------------------------------------------------
It requires double quotation marks or square brackets if the alias name contains spaces:
---------------------------------------------------------------------------
SELECT CustomerName AS Customer, ContactName AS [Contact Person]
FROM Customers;							...............not supported by mysql
---------------------------------------------------------------------------
SQL statement creates an alias named "Address" that combine 3 columns 
(Address, City and Country):
---------------------------------------------------------------------------
2.	SELECT CustomerName, Address + ', ' + PostalCode + ' ' + City + ', 			' + Country AS Address
	FROM Customers;
---------------------------------------------------------------------------
In MySQL use the following:
---------------------------------------------------------------------------
3.	SELECT CustomerName, CONCAT(Address,', ',PostalCode,', ',City,', 	',Country) AS Address
	FROM Customers;
---------------------------------------------------------------------------
We use the "Customers" and "Orders" tables, and give them the table aliases of "c" and "o" respectively 
---------------------------------------------------------------------------
Here we use aliases to make the SQL shorter:
---------------------------------------------------------------------------
Orders Table -> OrderID, OrderDate, CustomerID,OrderValue
---------------------------------------------------------------------------
4.	SELECT o.OrderID, o.OrderDate, c.CustomerName
	FROM Customers AS c, Orders AS o
	WHERE c.CustomerName="reliance" AND c.CustomerID=o.CustomerID;
---------------------------------------------------------------------------
SQL statement is the same as above, but without aliases:
---------------------------------------------------------------------------
5.	SELECT Orders.OrderID, Orders.OrderDate, Customers.CustomerName
	FROM Customers, Orders
	WHERE Customers.CustomerName="reliance" AND 	Customers.CustomerID=Orders.CustomerID;
---------------------------------------------------------------------------
---------------------------------------------------------------------------
