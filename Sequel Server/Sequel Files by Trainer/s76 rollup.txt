-----------------------------------------------------------------------------
			SQL Server ROLLUP
-----------------------------------------------------------------------------
The ROLLUP clause in SQL Server is an extension of the grouping set operator.
-----------------------------------------------------------------------------
It is the subclass of the GROUP BY clause that performs an aggregate operation on multiple levels in a hierarchy and prepares summary reports. 
-----------------------------------------------------------------------------
It allows us to generate multiple grouping sets within a single query, which is impossible with the GROUP BY clause as it aggregates a single group. 
-----------------------------------------------------------------------------
ROLLUP provides a more detailed analysis by employing a single query to create several grouping sets along the hierarchy of columns.
-----------------------------------------------------------------------------
ROLLUP modifier produces the summary output, including extra rows that represent super-aggregate summary operations. 
-----------------------------------------------------------------------------
It is mainly used to provide support for OLAP (Online Analytical Processing) operations.
-----------------------------------------------------------------------------
SELECT column_lists,  
aggregate_function (column_name)  
FROM table_name  
GROUP BY ROLLUP (column_names);  
-----------------------------------------------------------------------------
column_lists: 
-----------------------------------------------------------------------------
It indicates the name of columns from the defined table.
-----------------------------------------------------------------------------
aggregate_function (column): 
-----------------------------------------------------------------------------
It is used to perform aggregation on given columns such as SUM, COUNT, AVG 
-----------------------------------------------------------------------------
table_name:
----------------------------------------------------------------------------- 
It indicates the source table name from which data will be fetched.
-----------------------------------------------------------------------------
GROUP BY:
----------------------------------------------------------------------------- 
It's a clause used to specify a single column or multiple columns to create a group on which the aggregate operation is performed.
-----------------------------------------------------------------------------
ROLLUP: 
-----------------------------------------------------------------------------
It is used with the combination of the GROUP BY clause for creating multiple groups (i.e., grouping set) and hierarchically applies the aggregate function.
-----------------------------------------------------------------------------
SELECT column_lists,  
aggregate_function (column_name)  
FROM table_name  
GROUP BY column_list WITH ROLLUP; 
----------------------------------------------------------------------------- 
use db2;
go
-----------------------------------------------------------------------------
Commands completed successfully.
-----------------------------------------------------------------------------
CREATE TABLE EMPLOYEE 	(  
 				emp_id 		int identity,  
 				fullname 	varchar(65),  
 				occupation 	varchar(45),  
 				gender 		varchar(30),  
 				salary 		int,  
 				country 	varchar(55)  
			);
go  
-----------------------------------------------------------------------------
Commands completed successfully.
-----------------------------------------------------------------------------
INSERT INTO EMPLOYEE(fullname, occupation, gender, salary, country)  
VALUES 
('anil', 'Writer', 'Male', 62000, 'USA'),  
('sunita', 'Freelancer', 'Female', 55000, 'India'),  
('centhil', 'Scientist', 'Male', 85000, 'USA'),  
('ramesh', 'Manager', 'Male', 250000, 'India'),  
('rajesh', 'Business Analyst', 'Male', 42000, 'India'),  
('kajol', 'Engineer', 'Female', 65000, 'UK'),  
('radha', 'Writer', 'Female', 55000, 'UK'),  
('meera', 'Engineer', 'Female', 58000, 'USA'),  
('sanjana', 'HR', 'Female', 55000, 'UK'),  
('anay', 'Engineer', 'Male', 42000, 'USA'); 
go
-----------------------------------------------------------------------------
(10 rows affected)
-----------------------------------------------------------------------------
SELECT country, SUM(salary) AS "Total Salary"  
FROM EMPLOYEE  
GROUP BY country; 
go 
-----------------------------------------------------------------------------
country		Total Salary
-----------------------------------------------------------------------------
India		347000
UK		175000
USA		247000
-----------------------------------------------------------------------------
But it's not a better option when we want to get the grand totals of all salaries in the result also because it can only aggregate data at one level, which is subtotal, not grand totals. 
-----------------------------------------------------------------------------
SELECT country, SUM(salary) AS "Total Salary"  
FROM EMPLOYEE  
GROUP BY ROLLUP (country);
go
-----------------------------------------------------------------------------
country		Total Salary
-----------------------------------------------------------------------------
India		347000
UK		175000
USA		247000
NULL		769000
-----------------------------------------------------------------------------
SELECT country, SUM(salary) AS "Total Salary"  
FROM EMPLOYEE  
GROUP BY country WITH ROLLUP; 
go 
-----------------------------------------------------------------------------
country		Total Salary
-----------------------------------------------------------------------------
India		347000
UK		175000
USA		247000
NULL		769000
-----------------------------------------------------------------------------
SELECT COALESCE(country, 'GRAND TOTAL' ) AS country, SUM(salary) AS "Total Salary"  
FROM EMPLOYEE  
GROUP BY ROLLUP (country); 
go 
-----------------------------------------------------------------------------
country		Total Salary
-----------------------------------------------------------------------------
India		347000
UK		175000
USA		247000
GRAND TOTAL	769000
-----------------------------------------------------------------------------
			ROLLUP with multiple columns
-----------------------------------------------------------------------------
We already know that the ROLLUP clause performs aggregate operations on multiple levels in a hierarchy and prepare summary reports at each level within a single query.
-----------------------------------------------------------------------------
Suppose there are multiple columns in the GROUP BY clause. 
-----------------------------------------------------------------------------
In this case, the ROLLUP clause assumes a hierarchy among the columns supplied in the GROUP BY clause. 
-----------------------------------------------------------------------------
The query adds an extra super-aggregate summary row to the end of the result whenever a column value changes.
-----------------------------------------------------------------------------
GROUP BY c1, c2, c3 WITH ROLLUP  
-----------------------------------------------------------------------------
The ROLLUP modifier assumes the hierarchy as below:
-----------------------------------------------------------------------------
		1. c1 > c2 > c3   
-----------------------------------------------------------------------------
And generates the following grouping set:
-----------------------------------------------------------------------------
(c1, c2, c3)    
(c1, c2)    
(c1)    
()  
-----------------------------------------------------------------------------
SELECT gender, country, SUM(salary) AS "Total Salary"  
FROM EMPLOYEE  
GROUP BY gender, country ;
go
-----------------------------------------------------------------------------
gender		country		Total Salary
-----------------------------------------------------------------------------
Female		India		 55000
Male		India		292000
Female		UK		175000
Female		USA		 58000
Male		USA		189000
-----------------------------------------------------------------------------
SELECT gender, country, SUM(salary) AS "Total Salary"  
FROM EMPLOYEE  
GROUP BY gender, country WITH ROLLUP; 
go
-----------------------------------------------------------------------------
gender		country		Total Salary
-----------------------------------------------------------------------------
Female		India		 55000
Female		UK		175000
Female		USA		 58000
Female		NULL		288000
Male		India		292000
Male		USA		189000
Male		NULL		481000
NULL		NULL		769000
-----------------------------------------------------------------------------
The first level generates an extra sub-aggregate summary row for each set of female employees and then displays the total salary for all employees. 
-----------------------------------------------------------------------------It will set the country column to NULL.
-----------------------------------------------------------------------------
The second level generates an extra sub-aggregate summary row for each set of male employees and then displays the total salary. 
-----------------------------------------------------------------------------
Finally, the third level will generate an extra super-aggregate summary row that shows the grand totals for all columns. 
-----------------------------------------------------------------------------
It will set the gender and country columns to NULL.
-----------------------------------------------------------------------------
It ensures that we get a different answer if we modify the order of the columns defined in the GROUP BY clause. 
-----------------------------------------------------------------------------
SELECT gender, country, SUM(salary) AS "Total Salary"  
FROM EMPLOYEE  
GROUP BY country, gender WITH ROLLUP;  
go
-----------------------------------------------------------------------------
gender		country		Total Salary
-----------------------------------------------------------------------------
Female		India		55000
Male		India		292000
NULL		India		347000
Female		UK		175000
NULL		UK		175000
Female		USA		58000
Male		USA		189000
NULL		USA		247000
NULL		NULL		769000
-----------------------------------------------------------------------------
			GROUPING Function with ROLLUP
-----------------------------------------------------------------------------
The GROUPING() function determines whether NULL in the output is a regular grouped value, a super-aggregate value, or grand totals. 
-----------------------------------------------------------------------------
It yields one when NULL occurs in a supper-aggregate row. 
-----------------------------------------------------------------------------
Otherwise, it returns 0.
-----------------------------------------------------------------------------
The GROUPING() function can be used in the select list, HAVING clause, and ORDER BY clause.
-----------------------------------------------------------------------------
SELECT gender, country, SUM(salary) AS "Total Salary",  
GROUPING(gender),    
GROUPING(country)  
FROM EMPLOYEE  
GROUP BY   
ROLLUP (gender, country);  
go
-----------------------------------------------------------------------------
gender	country		Total Salary	(No column name)(No column name)
-----------------------------------------------------------------------------
Female	India		55000			0		0
Female	UK		175000			0		0
Female	USA		58000			0		0
Female	NULL		288000			0		1
Male	India		292000			0		0
Male	USA		189000			0		0
Male	NULL		481000			0		1
NULL	NULL		769000			1		1
-----------------------------------------------------------------------------
In the output, we can see that the GROUPING(gender) returns one when NULL in the gender column occurs in a super-aggregate row. 
-----------------------------------------------------------------------------
Otherwise, it will return zero.
-----------------------------------------------------------------------------
Similarly, the GROUPING(country) returns one when NULL in the country column occurs in a super-aggregate row. 
-----------------------------------------------------------------------------
Otherwise, it will return zero.
-----------------------------------------------------------------------------
			How is ROLLUP different from CUBE?
-----------------------------------------------------------------------------
ROLLUP and CUBE in SQL Server are used for reporting purposes and display the subtotal and grand totals. We generally use these clauses with the GROUP BY clause. 
-----------------------------------------------------------------------------
However, both are used for similar objectives, but they have some differences also.
-----------------------------------------------------------------------------
ROLLUP returns an output that shows aggregates for a hierarchy of values in the columns you've chosen. 
-----------------------------------------------------------------------------
On the other hand, CUBE creates a result set that includes aggregates for all possible combinations of values in the columns that have been selected.
-----------------------------------------------------------------------------
Let us take an example to illustrate these differences. Suppose we have three columns c1, c2, and c3. 
-----------------------------------------------------------------------------
Next, we will perform aggregation at a different level.
-----------------------------------------------------------------------------
If we use these columns with the CUBE clause as CUBE(c1, c2, c3), we will get the eight possible grouping sets:
-----------------------------------------------------------------------------
(c1, c2, c3)  
(c1, c2)  
(c2, c3)  
(c1, c3)  
(c1)  
(c2)  
(c3)  
()  
-----------------------------------------------------------------------------
If we use these columns with the ROLLUP clause as ROLLUP(c1, c2, c3), we will get only four possible grouping sets:
-----------------------------------------------------------------------------
(c1, c2, c3)  
(c1, c2)  
(c1)  
()  
-----------------------------------------------------------------------------
-----------------------------------------------------------------------------

